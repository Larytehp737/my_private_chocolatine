name: chocolatine

on:
  push:
    branches-ignore:
      - 'ga-ignore-*'
  pull_request:
    branches-ignore:
      - 'ga-ignore-*'

env:
  REPOSITORY: ${{ github.event.repository.name }}
  # MIRROR_URL: ${MIRROR_URL}
  # EXECUTABLES: ${EXECUTABLES}

jobs:
  check_coding_style:
    name: Check the coding style
    runs-on: ubuntu-latest
    container: ghcr.io/epitech/coding-style-checker:latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Coding style checker step
        run: check.sh $(pwd) $(pwd)
        shell: bash
      - name: Check if there is style errors or not
        run: |
          if [ -s "coding-style-reports.log" ]; then
            echo "STYLE_ERRORS=true" >> $GITHUB_ENV
          else
            echo "STYLE_ERRORS=false" >> $GITHUB_ENV
          fi
        shell: bash
      - name: Display style errors as annotation if they exists
        if: env.STYLE_ERRORS == 'true'
        run: |
          cat coding-style-reports.log
          style_report="coding-style-reports.log"
          while IFS= read -r each_error; do
            if [[ "$each_error" =~ ^\./([a-zA-Z0-9._-]+):([0-9]+):[[:space:]]([a-zA-Z]+):C-([A-Z0-9]+)$ ]]; then
              file="${BASH_REMATCH[1]}"
              line="${BASH_REMATCH[2]}"
              gravity="${BASH_REMATCH[3]}"
              error_code="${BASH_REMATCH[4]}"
              echo "::error file=$file,line=$line::$gravity coding style error: $file#L$line"
              echo "C-$error_code"
            fi
          done < "$style_report"
        shell: bash
      - name: Set the job status
        if: env.STYLE_ERRORS == 'true'
        run: exit 1
        shell: bash
    
      